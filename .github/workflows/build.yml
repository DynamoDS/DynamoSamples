# Build SampleIntegration.sln and DynamoSamples.sln with .NET 10.0
name: Build

on:
  push:
    branches:
      - master
  pull_request:

jobs:
  build:
    runs-on: windows-latest
    steps:
      - name: Checkout DynamoSamples Repo
        uses: actions/checkout@v5
        with:
          path: DynamoSamples
          repository: DynamoDS/DynamoSamples
      - name: Setup dotnet
        uses: actions/setup-dotnet@v5
        with:
          dotnet-version: "10.0.100-preview.5.25277.114"
      - name: Disable problem matcher
        run: echo "::remove-matcher owner=csc::"
      - name: Setup msbuild
        uses: microsoft/setup-msbuild@v2
      - name: Install dependencies for SampleIntegration
        run: |
          dotnet restore ${{ github.workspace }}\DynamoSamples\src\SampleIntegration\SampleIntegration.sln /p:Configuration=Release --runtime=win-x64
      - name: Build SampleIntegration
        run: |
          msbuild ${{ github.workspace }}\DynamoSamples\src\SampleIntegration\SampleIntegration.sln /p:Configuration=Release
      - name: Look for Sample Integration
        run: |
          if (Test-Path -Path "${{ github.workspace }}\DynamoSamples\src\SampleIntegration\bin\Release\SampleIntegration.dll") {
            Write-Output "SampleIntegration.dll exists!"
          } else {
            Write-Error "SampleIntegration.dll was not found!"
          }
      - name: Install dependencies for DynamoSamples
        run: |
          dotnet restore ${{ github.workspace }}\DynamoSamples\src\DynamoSamples.sln /p:Configuration=Release --runtime=win-x64
      - name: Build DynamoSamples
        run: |
          msbuild ${{ github.workspace }}\DynamoSamples\src\DynamoSamples.sln /p:Configuration=Release
      - name: Look for Sample Packages
        run: |
          $paths = @(
            "${{ github.workspace }}\DynamoSamples\dynamo_linter\Sample Linter\bin\SampleLinter.dll",
            "${{ github.workspace }}\DynamoSamples\dynamo_package\Dynamo Samples\bin\SampleLibraryUI.dll",
            "${{ github.workspace }}\DynamoSamples\dynamo_package\Dynamo Samples\bin\SampleLibraryZeroTouch.dll",
            "${{ github.workspace }}\DynamoSamples\dynamo_package\Dynamo Samples\bin\SampleZeroTouchUnits.dll",
            "${{ github.workspace }}\DynamoSamples\dynamo_viewExtension\Sample View Extension\bin\SampleViewExtension.dll"
          )

          foreach ($path in $paths) {
            if (Test-Path -Path $path) {
              Write-Output "$path exists!"
            } else {
              Write-Error "$path was not found!"
            }
          }
      - name: Get DynamoRuntime from s3
        run: |
          curl -o DynamoRuntime.zip https://downloads.dynamobuilds.com/DynamoCoreRuntime3.1.0.zip
          ls
      - name: Extract DynamoRuntime
        run: |
          7z x DynamoRuntime.zip -o${{ github.workspace }}\DynamoSamples\src\SampleLibraryTests\bin\Release\DynamoRuntime

      - name: Run test with the dotnet CLI
        run: |
          dotnet test ${{ github.workspace }}\DynamoSamples\src\SampleLibraryTests -p:Configuration=Release --filter "TestCategory!=Failure&TestCategory!=NEEDS_GEOM_LIB" --logger "trx;LogFileName=results.trx" --results-directory ${{ github.workspace }}\DynamoSamples\TestResults
      - name: Upload build artifact
        uses: actions/upload-artifact@v4.3.3
        with:
          name: DynamoSamples
          path: ${{ github.workspace }}\DynamoSamples\dynamo_package
          retention-days: 7
      - name: Upload test artifact
        uses: actions/upload-artifact@v4.3.3
        with:
          name: TestResults
          path: ${{ github.workspace }}\DynamoSamples\TestResults
          retention-days: 1
